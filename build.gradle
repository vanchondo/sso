plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'java'
    id 'jacoco'
    id 'maven-publish'
}

group 'com.vanchondo.sso'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

def lombok_version = '1.18.+'
def springBoot_version = '3.1.+'
def jsonwebtoken_version = '0.11.+'
def swagger_version = '3.0.+'
def jacoco_version = '0.8.9'

def jacocoExcludeList = [
        "**/configs/**",
        "**/dtos/**",
        "**/entities/**"
]

repositories {
    mavenCentral()
    maven {
        url = uri('https://nexus.victoranchondo.com/repository/maven-central/')
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

jacoco {
    toolVersion = "${jacoco_version}"
}

dependencies {
    implementation platform("org.springframework.boot:spring-boot-dependencies:${springBoot_version}")
//    implementation "org.springframework.boot:spring-boot-starter-web:${springBoot_version}"
    implementation "org.springframework.boot:spring-boot-starter-webflux:${springBoot_version}"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb:${springBoot_version}"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb-reactive:${springBoot_version}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${springBoot_version}"
    implementation "org.springframework.boot:spring-boot-starter-data-redis:${springBoot_version}"

    implementation "io.springfox:springfox-boot-starter:${swagger_version}"

    implementation "org.springframework.security:spring-security-crypto:5.7.+"
    implementation "com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4"
    implementation "org.aspectj:aspectjweaver:1.9.+"
    implementation "org.apache.commons:commons-lang3:3.12.+"
    compileOnly "org.projectlombok:lombok:${lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${lombok_version}"

    implementation "io.jsonwebtoken:jjwt-api:${jsonwebtoken_version}"
    implementation "io.jsonwebtoken:jjwt-impl:${jsonwebtoken_version}"
    implementation "io.jsonwebtoken:jjwt-gson:${jsonwebtoken_version}"

    // OWASP
    implementation "com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20220608.1"
    // Java mail
    implementation "org.eclipse.angus:angus-mail:2.0.2"
    // Freemarker
    implementation "org.freemarker:freemarker:2.3.32"

    // Test libraries
    testImplementation ("org.springframework.boot:spring-boot-starter-test:${springBoot_version}") {
        exclude group:"org.junit.vintage", module:"junit-vintage-engine"
        exclude group:"junit", module:"junit:"
    }
    testImplementation("org.springframework.security:spring-security-test")
    testImplementation "io.projectreactor:reactor-test:${springBoot_version}"
    testCompileOnly "org.projectlombok:lombok:${lombok_version}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombok_version}"

}

bootRun {
    systemProperty "spring.profiles.active", findProperty("spring.profiles.active")
    systemProperty "jasypt.encryptor.password", findProperty("jasypt.encryptor.password")
    jvmArgs([
        "-Dspring.profiles.active=${System.getenv('SPRING_PROFILE')}",
        "-Djasypt.encryptor.password=${System.getenv('JASYPT_SECRET_KEY')}"
    ])
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('reports/jacoco')
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExcludeList)
        }))
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExcludeList)
        }))
    }
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
    }
}